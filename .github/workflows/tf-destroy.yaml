name: "Terraform Destroy"

on:
  workflow_call:
    inputs:
      terraform_ver:
        description: 'Specifies version of Terraform to use. e.g: 1.1.0 Default=latest.'
        required: false
        type: string
        default: latest
      github_env:
        description: 'Specifies the GitHub deployment environment.'
        required: false
        type: string
        default: "devl"
      tfvars_filename:
        description: 'Specifies the Terraform TFVARS file.'
        required: true
        type: string
    outputs:
      result:
        description: The result of deployment operation
        value: ${{ jobs.apply.outputs.outcome }}
    secrets:
      aws_region:
        required: true
      aws_role_arn:
        required: true
      aws_tf_state_bucket_name:
        required: true
      aws_tf_state_bucket_key_name: 
        required: true
      

permissions:
  id-token: write # This is required for aws oidc connection
  contents: read # This is required for actions/checkout
  pull-requests: write # This is required for gh bot to comment PR

jobs:
  ## Only Validate and Plan
  destroy:
    runs-on: ubuntu-latest
    environment: ${{ inputs.github_env }}
    defaults:
      run:
        shell: bash
        working-directory: .
    steps:
      - name: Git checkout
        uses: actions/checkout@v3

      - name: Change file name
        run: | 
          mv ${{ github.workspace }}/${{ inputs.tfvars_filename }}  ${{ github.workspace }}/terraform.tfvars 

      - name: Configure AWS credentials from AWS account
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.aws_role_arn }}
          aws-region: ${{ secrets.aws_region }}
          role-session-name: github-aws-terraform-oidc

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.4

      - name: Config Terraform plugin cache
        run: |
          echo 'plugin_cache_dir="$HOME/.terraform.d/plugin-cache"' >~/.terraformrc
          mkdir --parents ~/.terraform.d/plugin-cache

      - name: Cache Terraform
        uses: actions/cache@v3
        with:
          path: |
            ~/.terraform.d/plugin-cache
          key: ${{ runner.os }}-terraform-${{ hashFiles('**/.terraform.lock.hcl') }}
          restore-keys: |
            ${{ runner.os }}-terraform-

      - name: Terraform Init
        id: init
        env:
          AWS_BUCKET_NAME: ${{ secrets.aws_tf_state_bucket_name }}
          AWS_BUCKET_KEY_NAME: ${{ secrets.aws_tf_state_bucket_key_name }}
        run: terraform init -backend-config="bucket=${{ secrets.aws_tf_state_bucket_name }}" -backend-config="key=${{ secrets.aws_tf_state_bucket_key_name }}" -backend-config="region=${{ secrets.aws_region }}"

      - name: Terraform Destroy Plan
        id: plan
        run: terraform plan -destroy

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Destroy
        run: terraform destroy -auto-approve -input=false

      - name: Set result output
        id: set-result
        run: echo "destroy-result=success" >> $GITHUB_OUTPUT
